version: '3.8'

services:
  minio:
    image: quay.io/minio/minio
    container_name: minio
    hostname: minio  
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  create-bucket:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc alias set minio http://minio:9000 minioadmin minioadmin123) do echo 'Waiting for MinIO...' && sleep 1; done &&
      if /usr/bin/mc ls minio/clickhouse >/dev/null 2>&1; then
        echo 'Bucket clickhouse already exists';
      else
        echo 'Creating bucket clickhouse';
        /usr/bin/mc mb minio/clickhouse &&
        /usr/bin/mc policy set public minio/clickhouse;
      fi
      "
    networks:
      - default

  clickhouse:
    image: clickhouse/clickhouse-server
    container_name: clickhouse-server
    ports:
      - "8123:8123"
    environment:
      CLICKHOUSE_USER: myuser
      CLICKHOUSE_PASSWORD: mypassword
      CLICKHOUSE_DB: mydatabase
    volumes:
      - clickhouse-data:/var/lib/clickhouse
      - ./storage_with_s3.xml:/etc/clickhouse-server/config.d/storage_with_s3.xml
    depends_on:
      minio:
        condition: service_healthy
      create-bucket:
        condition: service_completed_successfully
    entrypoint: >
      sh -c "
      mkdir -p /var/lib/clickhouse/disks/s3_disk &&
      chown -R clickhouse:clickhouse /var/lib/clickhouse &&
      exec /entrypoint.sh
      "

volumes:
  clickhouse-data:
  minio_data:
